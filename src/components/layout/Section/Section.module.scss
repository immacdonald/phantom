@layer components {
    .section {
        @include responsive-width;

        --background-image: none;

        min-height: 64px;
        padding-block: var(--layout-space-xs);
        flex-grow: 1;
        position: relative;

        &:not(:last-of-type) {
            flex: 0 0 auto;
        }

        &:last-of-type {
            flex: 1 0 auto;
        }

        &.background {
            &.regular {
                background-color: var(--background-container);
            }

            &.floating,
            &.inset {
                background-color: var(--background-container);
            }
        }

        &.floating {
            padding-inline: 0;
            display: flex;
            flex-direction: column;
            justify-content: start;
            align-items: center;

            > div {
                width: min(600px, 95%);
                background-color: var(--context-color-background, var(--background-content));
                padding: var(--space-lg);
                border: var(--border-soft);
                border-radius: var(--border-radius);
                box-shadow: var(--shadow-lifted);
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: center;
                gap: 12px;
            }
        }

        &.inset > div {
            @include responsive-width;

            min-height: 128px;
            background-color: var(--context-color-background, var(--background-content));
            border: var(--border-soft);
            padding-block: var(--space-lg);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-lifted);
        }

        &.image {
            &.regular {
                background-image: var(--background-image);
            }

            &.floating,
            &.inset {
                > div {
                    background-image: var(--background-image);
                }
            }
        }

        &.parallax {
            @mixin parallax {
                // Fallback color defaults to the primary color
                background-color: var(--background-container);
                background-attachment: fixed;
                background-position: center center;
                background-size: cover;
            }

            &.regular {
                @include parallax;
            }

            &.floating,
            &.inset {
                > div {
                    @include parallax;
                }
            }
        }

        &[data-top-shape],
        &[data-bottom-shape] {
            $inset: 32px;
            $outset: 32px;

            --outset-top: 0px;
            --outset-bottom: 0px;
            --inset-top: 0px;
            --inset-bottom: 0px;

            &[data-top-shape='inset'] {
                --inset-top: #{$inset};
            }

            &[data-top-shape='outset'] {
                --outset-top: #{$outset};
            }

            &[data-bottom-shape='inset'] {
                --inset-bottom: #{$inset};
            }

            &[data-bottom-shape='outset'] {
                --outset-bottom: #{$outset};
            }

            clip-path: polygon(
                0 var(--outset-top),
                50% var(--inset-top),
                100% var(--outset-top),
                100% calc(100% - var(--outset-bottom)),
                50% calc(100% - var(--inset-bottom)),
                0 calc(100% - var(--outset-bottom))
            );
            padding-top: max(calc(3 * (var(--outset-top) + var(--inset-top))), var(--layout-space-xs));
            padding-bottom: max(calc(2 * (var(--outset-bottom) + var(--inset-bottom))), var(--layout-space-xs));
        }

        @include respond-max($screen-md) {
            padding-block: var(--space-xl);
        }

        @include respond-max($screen-sm) {
            padding-block: var(--space-lg);
        }
    }
}
