@layer components {
    .toggle {
        --toggle-width: auto;
        --toggle-half: auto;
        --toggle-padding: var(--space-xs);

        position: relative;
        width: fit-content;
        height: 3em;
        overflow: hidden;
        font-weight: bold;

        @include base-input;

        &[disabled],
        &.disabled {
            background-color: var(--input-background-color-disabled);
            border: none;
            color: var(--input-text-color-disabled);
            cursor: not-allowed;
            filter: brightness(var(--filter-disabled-brightness)) saturate(var(--filter-disabled-saturation));
        }
    }

    .checkbox {
        position: absolute !important;
        width: 100% !important;
        height: 100% !important;
        padding: 0;
        margin: 0;
        opacity: 0;
        cursor: pointer;
        z-index: 3;

        &::before,
        &::after {
            display: none !important;
        }

        &[disabled],
        &.disabled {
            cursor: not-allowed;
        }
    }

    .states {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: var(--border-radius);
        width: var(--toggle-width);
        height: 100%;
        transition: 0.3s ease all;
        z-index: 1;
    }

    .before,
    .indicator,
    .after {
        padding: var(--toggle-padding);
        border-radius: var(--border-radius);
        transition: 0.3s ease all;
    }

    .before,
    .after {
        width: var(--toggle-half);
        text-align: center;
        line-height: 1;
        color: var(--input-text-color);
        z-index: 1;
    }

    .indicator {
        position: absolute;
        width: calc(50% - var(--toggle-padding));
        height: calc(100% - 2 * var(--toggle-padding));
        left: var(--toggle-padding);
        background-color: var(--input-color-active);
        z-index: 0;
    }

    .checkbox:checked + .states .indicator {
        left: calc(50%);
    }

    .checkbox:checked + .states .after {
        color: var(--input-text-color-active);
    }

    .checkbox:not(:checked) + .states .before {
        color: var(--input-text-color-active);
    }
}
